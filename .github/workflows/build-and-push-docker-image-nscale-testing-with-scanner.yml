name: Build and push Docker image for Testing Builds

on:
  push:
    paths:
        - Dockerfile  # Only run if the Dockerfile has changed
  pull_request:
      paths:
        - Dockerfile  # Only run if the Dockerfile has changed
  workflow_dispatch:

env:
  LATEST_UBUNTU_VERSION: "24.04"

jobs:
  docker:
    runs-on: ubuntu-latest
    environment: nscale-docker-testing
    strategy:
      matrix:
        include:
          - ubuntu_version: "20.04"
            ubuntu_name: "focal"
          - ubuntu_version: "22.04"
            ubuntu_name: "jammy"
          - ubuntu_version: "24.04"
            ubuntu_name: "noble"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Get Short SHA
        id: get_short_sha
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_PUSH_USER }}
          password: ${{ secrets.REGISTRY_PUSH_KEY }}

      # Build regular image
      - name: Build Standard Docker Image
        id: build_regular
        uses: docker/build-push-action@v6
        with:
          push: false
          file: Dockerfile
          platforms: linux/amd64
          build-args: |
            UBUNTU_VERSION=${{ matrix.ubuntu_version }}
          tags: |
            ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_name }}-${{ github.sha }}
            ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_name }}-${{ env.SHORT_SHA }}
            ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_name }}-latest
            ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_version }}-${{ github.sha }}
            ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_version }}-${{ env.SHORT_SHA }}
            ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_version }}-latest
            ${{ matrix.ubuntu_version == env.LATEST_UBUNTU_VERSION && format('{0}/inferencing/ubuntu-dind-testing:latest', vars.REGISTRY_URL) || '' }}
          load: true

      # Build systemd image
      - name: Build Systemd Docker Image
        id: build_systemd
        uses: docker/build-push-action@v6
        with:
          push: false
          file: Dockerfile.systemd
          platforms: linux/amd64
          build-args: |
            UBUNTU_VERSION=${{ matrix.ubuntu_version }}
          tags: |
            ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_name }}-systemd-${{ github.sha }}
            ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_name }}-systemd-${{ env.SHORT_SHA }}
            ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_name }}-systemd-latest
            ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_version }}-systemd-${{ github.sha }}
            ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_version }}-systemd-${{ env.SHORT_SHA }}
            ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_version }}-systemd-latest
            ${{ matrix.ubuntu_version == env.LATEST_UBUNTU_VERSION && format('{0}/inferencing/ubuntu-dind-testing:systemd-latest', vars.REGISTRY_URL) || '' }}
          load: true

      # Scan Standard Docker Image with Trivy
      - name: Scan Standard Docker Image with Trivy
        uses: aquasecurity/trivy-action@master
        env:
          TRIVY_DISABLE_VEX_NOTICE: "true" 
        with:
          image-ref: '${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_name }}-${{ github.sha }}'
          format: 'table'
          timeout: '10m'
          exit-code: '1'
          ignore-unfixed: true
          trivyignores: .trivyignore
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      # Scan systemd image
      - name: Scan Systemd Image with Trivy
        uses: aquasecurity/trivy-action@master
        env:
          TRIVY_DISABLE_VEX_NOTICE: "true" 
        with:
          image-ref: '${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_name }}-systemd-${{ github.sha }}'
          format: 'table'
          timeout: '10m'
          exit-code: '1'
          ignore-unfixed: true
          trivyignores: .trivyignore
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      # Push Standard Docker image if scans pass
      - name: Push Standard Docker image
        if: success()
        run: |
          docker push ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_name }}-${{ github.sha }}
          docker push ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_name }}-${{ env.SHORT_SHA }}
          docker push ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_name }}-latest
          docker push ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_version}}-${{ github.sha }}
          docker push ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_version }}-${{ env.SHORT_SHA }}
          docker push ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_version }}-latest
          if [ "${{ matrix.ubuntu_version }}" = "${{ env.LATEST_UBUNTU_VERSION }}" ]; then
            docker push ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:latest
          fi

      # Push systemd image if scans pass
      - name: Push Systemd Docker image
        if: success()
        run: |
          docker push ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_name }}-systemd-${{ github.sha }}
          docker push ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_name }}-systemd-${{ env.SHORT_SHA }}
          docker push ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_name }}-systemd-latest
          docker push ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_version }}-systemd-${{ github.sha }}
          docker push ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_version }}-systemd-${{ env.SHORT_SHA }}
          docker push ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_version }}-systemd-latest
          if [ "${{ matrix.ubuntu_version }}" = "${{ env.LATEST_UBUNTU_VERSION }}" ]; then
            docker push ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:systemd-latest
          fi