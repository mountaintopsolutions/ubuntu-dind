name: Build and push Docker image for Testing Builds

on:
  push:
    paths:
        - Dockerfile  # Only run if the Dockerfile has changed
  pull_request:
      paths:
        - Dockerfile  # Only run if the Dockerfile has changed
  workflow_dispatch:

env:
  LATEST_UBUNTU_VERSION: "24.04"

jobs:
  docker:
    runs-on: ubuntu-latest
    environment: nscale-docker-testing
    strategy:
      matrix:
        include:
          - ubuntu_version: "20.04"
            ubuntu_name: "focal"
          - ubuntu_version: "22.04"
            ubuntu_name: "jammy"
          - ubuntu_version: "24.04"
            ubuntu_name: "noble"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Get Short SHA
        id: get_short_sha
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_PUSH_USER }}
          password: ${{ secrets.REGISTRY_PUSH_KEY }}

      - name: Build Docker Image
        id: build
        uses: docker/build-push-action@v6
        with:
          push: false
          file: Dockerfile
          ## Only build amd64 for now.
          platforms: linux/amd64
          #platforms: linux/amd64,linux/arm64
          build-args: |
            UBUNTU_VERSION=${{ matrix.ubuntu_version }}
          tags: |
            ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_name }}-${{ github.sha }}
            ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_name }}-${{ env.SHORT_SHA }}
            ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_name }}-latest
            ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_version }}-${{ github.sha }}
            ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_version }}-${{ env.SHORT_SHA }}
            ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_version }}-latest
            ${{ matrix.ubuntu_version == env.LATEST_UBUNTU_VERSION && format('{0}/inferencing/ubuntu-dind-testing:latest', vars.REGISTRY_URL) || '' }}
          load: true  # Load the image into the local Docker daemon so trivy can scan it.

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        env:
          TRIVY_DISABLE_VEX_NOTICE: "true" 
        with:
          image-ref: '${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_name }}-${{ github.sha }}'
          format: 'table'
          # This may need adjusted for the rocm images because of the size.
          timeout: '10m'
          exit-code: '1'
          ignore-unfixed: true
          trivyignores: .trivyignore
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
## TODO: Test sarif after.
#          format: 'sarif'
#          output: 'trivy-results.sarif'
#
#      - name: Upload Trivy scan results to GitHub Security tab
#        uses: github/codeql-action/upload-sarif@v2
#        with:
#          sarif_file: 'trivy-results.sarif'
      - name: Push Docker image
        if: success()  # Only push if the previous steps succeeded
        run: |
          docker push ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_name }}-${{ github.sha }}
          docker push ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_name }}-${{ env.SHORT_SHA }}
          docker push ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_name }}-latest
          docker push ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_name }}-${{ github.sha }}
          docker push ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_version }}-${{ env.SHORT_SHA }}
          docker push ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:${{ matrix.ubuntu_version }}-latest
          if [ "${{ matrix.ubuntu_version }}" = "${{ env.LATEST_UBUNTU_VERSION }}" ]; then
            docker push ${{ vars.REGISTRY_URL }}/inferencing/ubuntu-dind-testing:latest
          fi
